name: 'Test setup-gazebo'
on:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
  schedule:
    # Run the CI automatically twice per day to look for flakyness.
    - cron: '0 */12 * * *'
defaults:
  run:
    shell: bash
jobs:
  test_action_linux:
    name: 'Run unit test on action'
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - ubuntu:focal
          - ubuntu:jammy
          - ubuntu:noble
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'
      - run: .github/workflows/build-and-test.sh

  test_gazebo_install_ubuntu:
    name: 'Check installation of Gazebo on Ubuntu'
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        gazebo_distribution:
          - citadel
          - fortress
          - garden
          - harmonic
        include:
          # Gazebo Citadel (Dec 2019 - Dec 2024)
          - docker_image: ubuntu:focal
            gazebo_distribution: citadel

          # Gazebo Fortress (Sep 2021 - Sep 2026)
          - docker_image: ubuntu:focal
            gazebo_distribution: fortress

          # Gazebo Garden (Sep 2022 - Nov 2024)
          - docker_image: ubuntu:focal
            gazebo_distribution: garden

          # Gazebo Harmonic (Sep 2023 - Sep 2028)
          - docker_image: ubuntu:jammy
            gazebo_distribution: harmonic
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'
      - name: 'Check Gazebo installation on Ubuntu runner'
        uses: ./
        with:
          required-gazebo-distributions: ${{ matrix.gazebo_distribution }}
      - name: 'Test Gazebo installation'
        run: |
          if command -v ign > /dev/null; then
            ign gazebo --versions
          elif command -v gz > /dev/null; then
            gz sim --versions
          else
            echo "Neither ign nor gz command found"
            exit 1
          fi

  test_gazebo_install_ubuntu_prerelease:
    name: 'Check installation of Gazebo pre-release binary on Ubuntu'
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.docker_image }}
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - ubuntu:jammy
          - ubuntu:noble
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'
      - name: 'Check Gazebo installation on Ubuntu runner'
        uses: ./
        with:
          required-gazebo-distributions: 'harmonic'
          use-gazebo-prerelease: 'true'
      - name: 'Test Gazebo installation'
        run: 'gz sim --versions'

  test_gazebo_install_ubuntu_nightly:
    name: 'Check installation of Gazebo nightly binary on Ubuntu'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:noble
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
        with:
          node-version: '20.x'
      - name: 'Check Gazebo installation on Ubuntu runner'
        uses: ./
        with:
          required-gazebo-distributions: 'ionic'
          use-gazebo-nightly: 'true'
      - name: 'Test Gazebo installation'
        run: 'gz sim --versions'
